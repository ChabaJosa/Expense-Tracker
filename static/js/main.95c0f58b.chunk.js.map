{"version":3,"sources":["components/Header.jsx","context/AppReducer.jsx","context/GlobalState.jsx","components/Balance.jsx","components/IncomeExpenses.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","console","log","income","expense","className","TransactionList","sign","classesita","key","Math","abs","onClick","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","Number","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAGaA,EAAS,WAElB,OACI,gD,qBCLO,WAACC,EAAOC,GACnB,OAAOA,EAAOC,MACV,IAAK,qBACD,OAAO,2BACAF,GADP,IAEIG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAEzF,IAAK,kBACD,OAAO,2BACAP,GADP,IAEIG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAGhD,QACI,OAAOH,ICXbQ,EAAe,CACjBL,aAAc,CACN,CAAEG,GAAI,EAAGG,KAAM,uCAAwCC,QAAS,IAChE,CAAEJ,GAAI,EAAGG,KAAM,uCAAwCC,OAAQ,KAC/D,CAAEJ,GAAI,EAAGG,KAAM,2BAA4BC,QAAS,IACpD,CAAEJ,GAAI,EAAGG,KAAM,0BAA2BC,OAAQ,OAKjDC,EAAiBC,wBAAcJ,GAI/BK,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBC,qBAAWC,EAAYR,GADL,mBACrCR,EADqC,KAC9BiB,EAD8B,KAkB5C,OACI,kBAACN,EAAcO,SAAf,CAAwBC,MAAO,CAC3BhB,aAAcH,EAAMG,aACpBiB,kBAjBR,SAA2Bd,GACvBW,EAAS,CACLf,KAAM,qBACNK,QAAQD,KAeRe,eAXR,SAAwBhB,GACpBY,EAAS,CACLf,KAAM,kBACNK,QAASF,OAYRS,ICzCAQ,EAAU,WAAO,IAIpBC,EAHiBC,qBAAWb,GAA3BR,aAEwBsB,KAAI,SAAApB,GAAW,OAAIA,EAAYK,UACpCgB,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAE1E,OACI,oCACI,4CACA,wBAAIvB,GAAG,WAAP,IAAmBiB,KCRlBO,EAAiB,WAAO,IAG3BC,EADiBP,qBAAWb,GAA3BR,aACsBsB,KAAI,SAAApB,GAAgB,OAAOA,EAAYK,UACpEsB,QAAQC,IAAI,gCAAiCF,GAE7C,IAAMG,EAAYH,EAAQ3B,QAAO,SAAAwB,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAC7FM,IAAyF,EAA5EJ,EAAQ3B,QAAO,SAAAwB,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAASC,QAAQ,GAE1G,OACQ,yBAAKO,UAAU,qBACX,6BACI,sCACA,uBAAG9B,GAAG,aAAa8B,UAAU,cAA7B,IAA4CF,IAEhD,6BACI,uCACA,uBAAG5B,GAAG,cAAc8B,UAAU,eAA9B,IAA8CD,MClBrDE,EAAkB,WAAO,IAC3BlC,EAAuBqB,qBAAWb,GAAlCR,aACAiB,EAAuBI,qBAAWb,GAAlCS,kBAMP,OAJAY,QAAQC,IAAI,kBAAkB9B,GAK1B,oCACI,uCACA,wBAAIG,GAAG,OAAO8B,UAAU,QACnBjC,EAAasB,KAAK,SAAApB,GACf,IAAMiC,EAAgBjC,EAAYK,OAAS,EAAI,IAAM,IAC/C6B,EAAgBlC,EAAYK,OAAS,EAAI,QAAU,OAGzD,OACA,wBAAI0B,UAAS,UAAKG,GAAcC,IAAKnC,GAChCA,EAAYI,KADjB,IACuB,8BAAO6B,EAAK,IAAIG,KAAKC,IAAIrC,EAAYK,QAArC,KAAqD,4BACxE0B,UAAU,aACVO,QAAS,kBAAMvB,EAAkBf,EAAYC,MAF2B,YClBnFsC,EAAiB,WAAO,IAAD,EAERC,mBAAS,IAFD,mBAEzBpC,EAFyB,KAEnBqC,EAFmB,OAGJD,mBAAS,GAHL,mBAGzBnC,EAHyB,KAGjBqC,EAHiB,KAKzB1B,EAAoBG,qBAAWb,GAA/BU,eAcP,OACI,oCACI,mDACA,0BAAMf,GAAG,OAAO0C,SAfR,SAACC,GACbA,EAAEC,iBACF,IAAMC,EAAiB,CACnB7C,GAAImC,KAAKW,MAAsB,IAAhBX,KAAKY,UACpB5C,OACAC,UAGJW,EAAe8B,KAQP,yBAAKf,UAAU,gBACX,2BAAOkB,QAAQ,QAAf,QACA,2BAAOpD,KAAK,OAAOiB,MAAOV,EAAM8C,SAAU,SAACN,GAAD,OAAOH,EAAQG,EAAEO,OAAOrC,QAAQb,GAAG,OAAOmD,YAAY,mBAEpG,yBAAKrB,UAAU,gBACX,2BAAOkB,QAAQ,UAAf,UACQ,6BADR,2CAIA,2BAAOpD,KAAK,SAASiB,MAAOT,EAAQ6C,SAAU,SAACN,GAAD,OAAOF,EAAUW,OAAOT,EAAEO,OAAOrC,SAASb,GAAG,SAASmD,YAAY,qBAEpH,4BAAQrB,UAAU,OAAlB,sBCNDuB,G,MArBH,WAGV,OAEE,kBAAC,EAAD,KAEE,kBAAC,EAAD,MACA,yBAAKvB,UAAU,aAEb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCpBRwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.95c0f58b.chunk.js","sourcesContent":["// Shortcut for functional component is \"rafc\"\r\nimport React from 'react'\r\n\r\nexport const Header = () => {\r\n\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","// A reducer is how we specify the App state changes in response to certain actions to our context.\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload )\r\n            }\r\n        case \"ADD_TRANSACTION\":\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer} from 'react'\r\nimport AppReducer from \"./AppReducer\"\r\n\r\n// // Initial State: Any state that's applied in a global scale\r\nconst initialState = {\r\n    transactions: [\r\n            { id: 1, text: 'MCU First 10 years feattured box set', amount: -20 },\r\n            { id: 2, text: 'Found change in the back of my truck', amount: 300 },\r\n            { id: 3, text: 'Bought 246 Udemy courses', amount: -10 },\r\n            { id: 4, text: 'My brother paid me back', amount: 150 }\r\n        ]\r\n}\r\n\r\n// Create Global Context\r\nexport const GlobalContext  = createContext(initialState)\r\n\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Actions\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type: \"DELETE_TRANSACTION\",\r\n            payload:id\r\n        })\r\n    } \r\n    \r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: \"ADD_TRANSACTION\",\r\n            payload: transaction\r\n        })\r\n    } \r\n\r\n    return(\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        \r\n        }} > \r\n\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n\r\n}\r\n\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from \"../context/GlobalState\"\r\n\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n\r\n    const amounts   = transactions.map(transaction => transaction.amount);\r\n    const total     = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 id=\"balance\">${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from \"../context/GlobalState\"\r\n\r\n\r\nexport const IncomeExpenses = () => {\r\n\r\n    const {transactions} = useContext(GlobalContext)\r\n    const amounts = transactions.map(transaction => {return transaction.amount})\r\n    console.log(\"These are the current amounts\", amounts)\r\n\r\n    const income    = amounts.filter(item => item > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const expense   = (amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1).toFixed(2);\r\n\r\n    return (\r\n            <div className=\"inc-exp-container\">\r\n                <div>\r\n                    <h4>Income</h4>\r\n                    <p id=\"money-plus\" className=\"money plus\">${income}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>Expense</h4>\r\n                    <p id=\"money-minus\" className=\"money minus\">${expense}</p>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n","import React, {useContext }from 'react'\r\nimport {GlobalContext} from \"../context/GlobalState\"\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions}        = useContext(GlobalContext)\r\n    const {deleteTransaction}   = useContext(GlobalContext)\r\n\r\n    console.log(\"This is context\",transactions)\r\n    // Returns transactions array\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul id=\"list\" className=\"list\">\r\n                {transactions.map( transaction => {\r\n                    const sign          = transaction.amount < 0 ? '-' : '+';\r\n                    const classesita    = transaction.amount < 0 ? 'minus' : 'plus';\r\n\r\n\r\n                    return (\r\n                    <li className={`${classesita}`} key={transaction}>\r\n                        {transaction.text} <span>{sign+\"$\"+Math.abs(transaction.amount)} </span><button \r\n                        className=\"delete-btn\"\r\n                        onClick={() => deleteTransaction(transaction.id)}\r\n                        >\r\n                            x\r\n                        </button>\r\n                    </li> \r\n                    )\r\n\r\n                })}\r\n            \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport {GlobalContext} from \"../context/GlobalState\"\r\n\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [text, setText] = useState(\"\")\r\n    const [amount, setAmount] = useState(0)\r\n\r\n    const {addTransaction}   = useContext(GlobalContext)\r\n\r\n    const addThis = (e) => {\r\n        e.preventDefault()\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 1000000000),\r\n            text,\r\n            amount\r\n        }\r\n\r\n        addTransaction(newTransaction)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form id=\"form\" onSubmit={addThis}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} id=\"text\" placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n                (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(Number(e.target.value))} id=\"amount\" placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React                from 'react';\nimport {Header}             from \"./components/Header\"            // Curly braces are required here because of the ES7 syntax, \nimport {Balance}            from \"./components/Balance\"           // not sure if it's desctrocturing\nimport {IncomeExpenses}     from \"./components/IncomeExpenses\"    \nimport {TransactionList}    from \"./components/TransactionList\"   \nimport {AddTransaction}     from \"./components/AddTransaction\"    \n\nimport {GlobalProvider}     from \"./context/GlobalState\"\n\nimport './App.css';\n\nconst App = () => {\n\n\n  return (\n    // It all must be wrapped in the Global Provider to access the Global State value\n    <GlobalProvider>\n\n      <Header/>\n      <div className=\"container\">\n\n        <Balance          />\n        <IncomeExpenses   />\n        <TransactionList  />\n        <AddTransaction   />\n        \n      </div>    \n\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}